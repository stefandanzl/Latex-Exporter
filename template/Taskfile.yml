version: '3'

# Note: These environment variables are automatically set by the Obsidian plugin:
# EXPORT_PATH - Export directory where files are located
# EXPORT_FILENAME - Name of the .tex file (e.g., "document_output.tex")
# VAULT_PATH - Full path to your Obsidian vault
# TEX_BASENAME - Filename without .tex extension (e.g., "document_output")
# BUILD_DIR - Path to build directory (${EXPORT_PATH}/build)
# TEMPLATE_DIR - Path to templates directory (${EXPORT_PATH}/templates)
# TASKFILE - Path to this Taskfile

env:
  # Environment variables with defaults
  EXPORT_PATH: .
  BUILD_DIR: ./build
  TEMPLATE_DIR: ./templates
  TEX_BASENAME: main
  EXPORT_FILENAME: main.tex
  DOCKER_IMAGE: cristiangreco/pdflatex

tasks:
  # Main build task - runs everything
  build:
    desc: 'Complete LaTeX build pipeline'
    cmds:
      - task: setup
      - task: copy-templates
      - task: copy-exports
      - task: compile
      - task: cleanup
      - echo "‚úÖ Build completed successfully!"

  # Create build directory
  setup:
    desc: 'Create build directory'
    cmds:
      - cmd: 'if not exist "%BUILD_DIR%" mkdir "%BUILD_DIR%"'
        platforms: [windows]
      - cmd: 'mkdir -p $BUILD_DIR'
        platforms: [linux, darwin]
    silent: true

# Copy template files to build directory
  copy-templates:
    desc: 'Copy template files to build directory'
    cmds:
      - cmd: cp "{{.TEMPLATE_DIR}}/*" "{{.BUILD_DIR}}/."


  # Compile with Docker
  compile:
    desc: 'Compile LaTeX with Docker'
    cmds:
      - cmd: |
          echo üî® Compiling LaTeX
          docker run --rm -it -v {{.BUILD_DIR}}:/sources" {{.DOCKER_IMAGE}} bash -c "pdflatex {{.EXPORT_FILENAME}} && biber {{.TEX_BASENAME}} && pdflatex {{.EXPORT_FILENAME}} && pdflatex {{.EXPORT_FILENAME}}"

  # Copy exported files to build directory
  copy-exports:
    desc: 'Copy exported LaTeX files to build directory'
    cmds:
      - cmd: cp -r {{.EXPORT_PATH}}/* {{.BUILD_DIR}}/.
      


  # Compile with Docker
  compile:
    desc: 'Compile LaTeX with Docker'
    cmds:
      - cmd: |
          echo üî® Compiling LaTeX
          docker run --rm -it -v {{.BUILD_DIR}}:/sources" {{.DOCKER_IMAGE}} bash -c "pdflatex {{.EXPORT_FILENAME}} && biber {{.TEX_BASENAME}} && pdflatex {{.EXPORT_FILENAME}} && pdflatex {{.EXPORT_FILENAME}}"


  # Clean up build directory (keep only PDF)
  cleanup:
    desc: 'Clean build directory, keeping only PDF files'
    cmds:
      - cmd: rm -r {{.BUILD_DIR}}/*.tex
      - cmd: rm -r {{.BUILD_DIR}}/*.
      - cmd: rm -r {{.BUILD_DIR}}/*


  # Force cleanup (remove everything)
  clean:
    desc: 'Remove all files from build directory'
    cmds:
      - cmd: |
          if exist "%BUILD_DIR%" (
            del /q "%BUILD_DIR%\*" 2>nul
            for /d %%d in ("%BUILD_DIR%\*") do rmdir /s /q "%%d" 2>nul
            echo üóëÔ∏è Build directory cleaned
          )
        platforms: [windows]
      - cmd: |
          if [ -d "$BUILD_DIR" ]; then
            rm -rf "$BUILD_DIR"/*
            echo "üóëÔ∏è Build directory cleaned"
          fi
        platforms: [linux, darwin]

  # Copy PDF back to export directory
  copy-pdf:
    desc: 'Copy PDF back to export directory'
    cmds:
      - cmd: |
          if exist "%BUILD_DIR%\*.pdf" (
            copy "%BUILD_DIR%\*.pdf" "%EXPORT_PATH%\"
            echo ‚úÖ PDF copied to export directory
          ) else (
            echo ‚ùå No PDF files found to copy
            exit /b 1
          )
        platforms: [windows]
      - cmd: |
          if ls "$BUILD_DIR"/*.pdf 1> /dev/null 2>&1; then
            cp "$BUILD_DIR"/*.pdf "$EXPORT_PATH/"
            echo "‚úÖ PDF copied to export directory"
          else
            echo "‚ùå No PDF files found to copy"
            exit 1
          fi
        platforms: [linux, darwin]

  # Quick build with PDF copy
  build-and-copy:
    desc: 'Build and copy PDF back to export directory'
    cmds:
      - task: build
      - task: copy-pdf

  # Debug: Show all environment variables
  debug:
    desc: 'Show all environment variables for debugging'
    cmds:
      - cmd: |
          echo üîç Environment Variables:
          echo   EXPORT_PATH = %EXPORT_PATH%
          echo   EXPORT_FILENAME = %EXPORT_FILENAME%
          echo   TEX_BASENAME = %TEX_BASENAME%
          echo   BUILD_DIR = %BUILD_DIR%
          echo   TEMPLATE_DIR = %TEMPLATE_DIR%
          echo   VAULT_PATH = %VAULT_PATH%
          echo   TASKFILE = %TASKFILE%
        platforms: [windows]
      - cmd: |
          echo "üîç Environment Variables:"
          echo "  EXPORT_PATH = $EXPORT_PATH"
          echo "  EXPORT_FILENAME = $EXPORT_FILENAME"
          echo "  TEX_BASENAME = $TEX_BASENAME"
          echo "  BUILD_DIR = $BUILD_DIR"
          echo "  TEMPLATE_DIR = $TEMPLATE_DIR"
          echo "  VAULT_PATH = $VAULT_PATH"
          echo "  TASKFILE = $TASKFILE"
        platforms: [linux, darwin]

  # List available tasks
  help:
    desc: 'Show available tasks'
    cmds:
      - task --list

# Default task
default: build